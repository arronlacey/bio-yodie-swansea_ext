###
### GLOBAL SETTINGS, potentially needed in more than one sub-pipeline
### 

- set: docfeature
  name: keyOverlapsOnly
  value: false

## The following ones *should* already be set for us, but if not, we
## can set them here:

## language
# - set: docfeature
#   name: lang
#   value: en

## docTypes: generic, tweet  (influences preprocessing and other things)
- set: docfeature
  name: docType
  value: generic
  
##############################################################################
####
#### SUBPIPELINE: preprocess-en
####
##############################################################################

## the model to use for the NER tagger in the preprocessing sub pipeline
## Only leave one value not commented out!
## NOTE: this is an init parm!!
## NOTE: the path seems to be relative to the path of the ModularPipelines plugin!!
- set: prinit
  controller: preprocess-en
  prname: StanfordNER
  name: modelFile
  value: ../Stanford_CoreNLP/resources/english.conll.4class.distsim.crf.ser.gz

- set: prrun
  controller: gazetteer-en
  prname: GATE Morphological analyser   
  value: false

## Settings for the precache-twitterinfo pipeline
## the key and secret for Twitter API access: MUST be replaced by a proper value
- set: prparm
  controller: precache-twitterinfo
  prname: TwitterPreCacheUsers
  name: twitterApiKey
  value: dummyValue
- set: prparm
  controller: precache-twitterinfo
  prname: TwitterPreCacheUsers
  name: twitterApiSecret
  value: dummyValue


##############################################################################
####
#### SUBPIPELINE: preprocess-en-twitter 
####
##############################################################################

## the model to use for the NER tagger in the twitter preprocessing sub pipeline
## Only leave one value not commented out!
## NOTE: this is an init parm!!
## NOTE: the path seems to be relative to the path of the ModularPipelines plugin!!
- set: prinit
  controller: preprocess-en-twitter
  prname: StanfordNER
  name: modelFile
  value: ../Stanford_CoreNLP/resources/english.conll.4class.distsim.crf.ser.gz

## Settings for the preprocess-en-twitter sub-pipeline
## the key and secret for Twitter API access: MUST be replaced by a proper value
- set: prparm
  controller: preprocess-en-twitter
  prname: TwitterExpander:User
  name: twitterApiKey
  value: dummyValue
- set: prparm
  controller: preprocess-en-twitter
  prname: TwitterExpander:User
  name: twitterApiSecret
  value: dummyValue
  
## which of the expansions to run, default is to run none, and since none is
## run, also not run the segment processing which processes the generated text
- set: prrun
  controller: preprocess-en-twitter
  prname: TwitterExpander:User
  value: true
- set: prparm
  controller: preprocess-en-twitter
  prname: TwitterExpander:User
  name: cacheIsReadOnly
  value: true
- set: prparm
  controller: preprocess-en-twitter
  prname: TwitterExpander:User
  name: fromCacheOnly
  value: true
  
- set: prrun
  controller: preprocess-en-twitter
  prname: TwitterExpander:Hashtag
  value: true
- set: prparm
  controller: preprocess-en-twitter
  prname: TwitterExpander:Hashtag
  name: cacheIsReadOnly
  value: true
- set: prparm
  controller: preprocess-en-twitter
  prname: TwitterExpander:Hashtag
  name: fromCacheOnly
  value: true
  
- set: prrun
  controller: preprocess-en-twitter
  prname: TwitterExpander:Url
  value: true
- set: prparm
  controller: preprocess-en-twitter
  prname: TwitterExpander:Url
  name: cacheIsReadOnly
  value: true
- set: prparm
  controller: preprocess-en-twitter
  prname: TwitterExpander:Url
  name: fromCacheOnly
  value: true
  
- set: prrun
  controller: preprocess-en-twitter
  prname: TwitterExpander:AnnotateAll
  value: true
- set: prrun
  controller: preprocess-en-twitter
  prname: MP:preprocess-en-4TwitterExpansions
  value: true

##############################################################################
###
### SUBPIPELINE: gazetteer-en
### 
##############################################################################
- set: prparm
  controller: gazetteer-en
  prname: ExtGaz2:gazetteer-en:labels
  name: longestMatchOnly
  value: false
- set: prparm
  controller: gazetteer-en
  prname: ExtGaz2:misc-en
  name: longestMatchOnly
  value: false


###############################################
### ABANDONED SUBPIPELINE: gazetteer-postproc
###############################################
#### NOTE: gazetteer-postproc has been abandoned, what happened in here
#### is now in spotting and lookupinfo and partly in filter-prescoring.
##
#### Settings for the gazetteer-postproc sub-pipeline
###- set: prrun
###  controller: gazetteer-postproc
###  prname: JAPE:removeLookups
###  value: false
###- set: prrun
###  controller: gazetteer-postproc
###  prname: Java:filterByNER
###  value: false

##############################################################################
###
###  SUBPIPELINE: Spotting
###
##############################################################################


## TODO: check out where to put the filtering step for preparing the 
## manual annotation corpora.
##
## if this property is set, the filtering will be done by target annotations
## in the given list of annotation sets (separated by semicolons) instead of
## based on the POS tags
# - set: propset
#   name: lodie.gazetteer-postproc.filterLookupByPOS.ne-set
#   value: "annotator1"


## NOTE: the following filtering steps will filter the spots before the
## candidates get retrieved and merged. Filtering by the same criteria
## can also be done later, after the candidates have been retrieved
## in sub-pipeline: ????

- set: prrun
  controller: spotting
  prname: FilterAnnotations:filterByDateURI
  value: true

- set: prrun
  controller: spotting
  prname: Java:filterByNESet
  value: false
  
- set: prrun
  controller: spotting
  prname: Java:filterByNE
  value: false 
  
- set: prrun
  controller: spotting
  prname: Java:filterHeuristic
  value: true

- set: prrun
  controller: spotting
  prname: Java:filterCoextensive
  value: true

##############################################################################
###
### SUBPIPELINE: lookupinfo
###
##############################################################################

## Copy the LookupList annotation right after the have been created,
## merged and features have been added
- set: prrun
  controller: lookupinfo
  prname: Java:copyListAnns
  value: false
  
## TODO: add the run flags for further filtering steps here once we 
## actually added them to the pipeline!


##############################################################################
###
### SUBPIPELINE: filter-prescoring
###
##############################################################################
- set: propset
  name: lodie.filter-prescoring.filterByFrequency.minUriFreqInWp
  value: "0"
- set: propset
  name: lodie.filter-prescoring.filterByFrequency.maxCands
  value: "10"
## if candidates where the minUriFreqInWp count is null should be kept
- set: propset
  name: lodie.filter-prescoring.filterByFrequency.keepCandsWithNullFreq
  value: "false"


### TODO: we should move this step into the main pipeline or a separate 
### sub-pipeline and make it remove anything that got expanded by default.
## Related to twitter expansion!  
## should a match in the expanded twitter user id get projected back
## to the original twitter id?
- set: prrun
  controller: filter-prescoring
  prname: Java:projectTwitterUserID
  value: false
## when projecting the twitter user id, should we limit to coextensive only?
- set: propset
  name: lodie.filter-prescoring.projectTwitterUserID.coextonly
  value: false
  


##############################################################################
###
### SUBPIPELINE: scoring
###
##############################################################################

## We will normalize candidate lists over coref chains. Pool candidates from
## top n spans. What should n be?
- set: prparm
  controller: scoring
  prname: CorefRationalization
  name: candNormalizationSpanSetSize
  value: 2

## If a candidate is rejected from a coref chain for not being on one of the
## top n spans, should it be deleted or merely flagged?
- set: prparm
  controller: scoring
  prname: CorefRationalization
  name: flagOrDelete
  value: FLAG

## Use coref at all?
- set: prparm
  controller: scoring
  prname: CorefRationalization
  name: useCoref
  value: false

## If for example URL occurs in context window for an entity,
## should the entire expansion be included in the context?
- set: prparm
  controller: scoring
  prname: VectSim:RDFDirectTFIDF500000new
  name: useTwitterExpansion
  value: true

## Context length in characters
- set: prparm
  controller: scoring
  prname: VectSim:RDFDirectTFIDF500000new
  name: contextLength
  value: 2000

## Context window in characters
- set: prparm
  controller: scoring
  prname: StructuralSimilarity
  name: contextChars
  value: 200

## If for example URL occurs in neighbourhood for an entity,
## should all entities in the expansion be considered neighbours?
- set: prparm
  controller: scoring
  prname: StructuralSimilarity
  name: useTwitterExpansion
  value: true

- set: prrun
  controller: scoring
  prname: TwitterExpander:Remove
  value: true

##############################################################################
###
### SUBPIPELINE: disambiguation-simple
###
##############################################################################
- set: propset
  name: lodie.disambiguation-simple.simple-disamb.featureName
  value: relUriFreqByLabelInWp
- set: propset
  name: lodie.disambiguation-simple.simple-disamb.minScore
  value: 0.05
- set: propset
  name: lodie.disambiguation-simple.simple-disamb.createNilMentions
  value: false

##############################################################################
###
### SUBPIPELINE: disambiguation-libsvm
###
##############################################################################

## Settings for the disambiguation-libsvm pipeline

- set: propset
  name: lodie.disambiguation-ml-training.coextensiveOnly
  value: true

## Set the libsvm parameters as described at http://www.csie.ntu.edu.tw/~cjlin/libsvm/ 
- set: prparm
  controller: disambiguation-ml-training
  prname: LF:LibSVM-training
  name: learnerParams
  value: "-c 2000.0 -b 1"
## Save directory for training is where to save the model to.
- set: prparm
  controller: disambiguation-ml-training
  prname: LF:LibSVM-training
  name: saveDirectory
  value: "../../disambiguation-libsvm"
## Save directory for application is where to load the model from.
- set: prparm
  controller: disambiguation-ml-application
  prname: LF:LibSVM-application
  name: saveDirectory
  value: "../../disambiguation-libsvm"
## Feature spec URL is where to load the feature spec config from.
- set: prparm
  controller: disambiguation-ml-training
  prname: LF:LibSVM-training
  name: featureSpecURL
  value: "../../disambiguation-libsvm/feature-spec.xml"
- set: prparm
  controller: disambiguation-ml-application
  prname: LF:LibSVM-application
  name: featureSpecURL
  value: "../../disambiguation-libsvm/feature-spec.xml"
  
#- set: propset
#  name: lodie.disambiguation-libsvm.SelectBestCandidate.confidenceThreshold
#  value: 0.0
#- set: propset
#  name: lodie.disambiguation-libsvm.SelectBestCandidate.frequencyThreshold
#  value: 1000
#- set: propset
#  name: lodie.disambiguation-libsvm.SelectBestCandidate.frequencyFeature
#  value: "scUriFreqInWp"
#- set: propset
#  name: lodie.disambiguation-libsvm.SelectBestCandidate.commonnessThreshold
#  value: 5

